// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RezervacijaSmjestaja.Data;

#nullable disable

namespace RezervacijaSmjestaja.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250201191318_1221")]
    partial class _1221
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RezervacijaSmjestaja.Models.Korisnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("RezervacijaSmjestaja.Models.Rezervacija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumDo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumOd")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("SmjestajId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("SmjestajId");

                    b.ToTable("Rezervacije");
                });

            modelBuilder.Entity("RezervacijaSmjestaja.Models.Smjestaj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CijenaPoNoci")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlikaUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Smjestaji");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CijenaPoNoci = 120m,
                            Naziv = "Hotel Blue Lagoon",
                            Opis = "Luksuzan hotel uz obalu",
                            SlikaUrl = "/pictures/1.jpg"
                        },
                        new
                        {
                            Id = 2,
                            CijenaPoNoci = 250m,
                            Naziv = "Villa Sun",
                            Opis = "Privatna vila s bazenom",
                            SlikaUrl = "/pictures/2.jpg"
                        },
                        new
                        {
                            Id = 3,
                            CijenaPoNoci = 180m,
                            Naziv = "Mountain Resort",
                            Opis = "Odmaralište u planinama",
                            SlikaUrl = "/pictures/3.jpg"
                        },
                        new
                        {
                            Id = 4,
                            CijenaPoNoci = 100m,
                            Naziv = "Apartman Deluxe",
                            Opis = "Moderan apartman u centru",
                            SlikaUrl = "/pictures/4.jpg"
                        },
                        new
                        {
                            Id = 5,
                            CijenaPoNoci = 80m,
                            Naziv = "Apartman Val",
                            Opis = "Mirno mjesto za odmor",
                            SlikaUrl = "/pictures/5.jpg"
                        },
                        new
                        {
                            Id = 6,
                            CijenaPoNoci = 200m,
                            Naziv = "Villa Sopranos",
                            Opis = "Kuća na plaži s pogledom",
                            SlikaUrl = "/pictures/6.jpg"
                        });
                });

            modelBuilder.Entity("RezervacijaSmjestaja.Models.Rezervacija", b =>
                {
                    b.HasOne("RezervacijaSmjestaja.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RezervacijaSmjestaja.Models.Smjestaj", "Smjestaj")
                        .WithMany()
                        .HasForeignKey("SmjestajId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Smjestaj");
                });
#pragma warning restore 612, 618
        }
    }
}
